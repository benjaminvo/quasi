$positions: '-top' '-right' '-bottom' '-left' ''; // One left blank for the clean .padding/.margin (all sides) option

@each $position in $positions {
	.padding#{$position}-8-1 { padding#{$position}: $scale-8-1 !important; }
	.padding#{$position}-7-1 { padding#{$position}: $scale-7-1 !important; }
	.padding#{$position}-6-1 { padding#{$position}: $scale-6-1 !important; }
	.padding#{$position}-5-1 { padding#{$position}: $scale-5-1 !important; }
	.padding#{$position}-4-1 { padding#{$position}: $scale-4-1 !important; }
	.padding#{$position}-3-1 { padding#{$position}: $scale-3-1 !important; }
	.padding#{$position}-2-1 { padding#{$position}: $scale-2-1 !important; }
	.padding#{$position} 	   { padding#{$position}: $scale !important; }
	.padding#{$position}-1-2 { padding#{$position}: $scale-1-2 !important; }
	.padding#{$position}-1-3 { padding#{$position}: $scale-1-3 !important; }
	.padding#{$position}-1-4 { padding#{$position}: $scale-1-4 !important; }
	.padding#{$position}-1-5 { padding#{$position}: $scale-1-5 !important; }
	.padding#{$position}-1-6 { padding#{$position}: $scale-1-6 !important; }
	.padding#{$position}-1-7 { padding#{$position}: $scale-1-7 !important; }
	.padding#{$position}-1-8 { padding#{$position}: $scale-1-8 !important; }}
.padding-none              { padding: 0 !important; }
.padding-none              {
	&-top 		{ padding-top: 0 !important; }
	&-bottom 	{ padding-bottom: 0 !important; }
}

@each $position in $positions {
	.margin#{$position}-8-1 { margin#{$position}: $scale-8-1 !important; }
	.margin#{$position}-7-1 { margin#{$position}: $scale-7-1 !important; }
	.margin#{$position}-6-1 { margin#{$position}: $scale-6-1 !important; }
	.margin#{$position}-5-1 { margin#{$position}: $scale-5-1 !important; }
	.margin#{$position}-4-1 { margin#{$position}: $scale-4-1 !important; }
	.margin#{$position}-3-1 { margin#{$position}: $scale-3-1 !important; }
	.margin#{$position}-2-1 { margin#{$position}: $scale-2-1 !important; }
	.margin#{$position} 		{ margin#{$position}: $scale !important; }
	.margin#{$position}-1-2 { margin#{$position}: $scale-1-2 !important; }
	.margin#{$position}-1-3 { margin#{$position}: $scale-1-3 !important; }
	.margin#{$position}-1-4 { margin#{$position}: $scale-1-4 !important; }
	.margin#{$position}-1-5 { margin#{$position}: $scale-1-5 !important; }
	.margin#{$position}-1-6 { margin#{$position}: $scale-1-6 !important; }
	.margin#{$position}-1-7 { margin#{$position}: $scale-1-7 !important; }
	.margin#{$position}-1-8 { margin#{$position}: $scale-1-8 !important; }}
.margin-none              { margin: 0 !important; }

.font {
	&Size {
		&-display { font-size: $fontSize-display;
			@include breakpoint( 'tablet' ) { font-size: $fontSize-title; }
			@include breakpoint( 'mobileMedium' ) { font-size: $fontSize-xxlarge; }}
		&-title 	{ font-size: $fontSize-title;
			@include breakpoint( 'mobileMedium' ) { font-size: $fontSize-xxlarge; } }
		&-xxlarge { font-size: $fontSize-xxlarge; }
		&-xlarge 	{ font-size: $fontSize-xlarge; }
		&-large 	{ font-size: $fontSize-large; }
		&-base 		{ font-size: $fontSize-base; }
		&-small 	{ font-size: $fontSize-small; }
		&-xsmall 	{ font-size: $fontSize-xsmall; }
		&-xxsmall { font-size: $fontSize-xxsmall; }}
	&Weight {
		&-thin 		{ font-weight: 100; }
		&-normal 	{ font-weight: 400; }
		&-bold 		{ font-weight: 700; }}
	&Family {
		&-logo 		{ font-family: $fontFamily-logo !important; }
		&-display { font-family: $fontFamily-display !important; }
		&-headline{ font-family: $fontFamily-headline !important; }
		&-body 		{ font-family: $fontFamily-body !important; }
		&-system 	{ font-family: $fontFamily-system !important; }}
}

.text {
	&Transform {
		&-uppercase { text-transform: uppercase; }
		&-none 			{ text-transform: none; }}
	&Align {
		&-center { text-align: center; }}
}

.color 					{
	&-brandFirst 	{ color: $color-brandFirst;
		&-darker {
			&-1 { color: $color-brandFirst-darker-1; }
			&-2 { color: $color-brandFirst-darker-2; }
			&-3 { color: $color-brandFirst-darker-3; }
		}
	}
	&-brandSecond { color: $color-brandSecond; }
	&-brandGrey 	{ color: $color-brandGrey;
		&-lighter {
			&-1 { color: $color-brandGrey-lighter-1; }
			&-2 { color: $color-brandGrey-lighter-2; }
			&-3 { color: $color-brandGrey-lighter-3; }
		}
	}
	&-brandDark 	{ color: $color-brandDark; }
	&-brandLight  { color: $color-brandLight;
		&-darker {
			&-1 { color: $color-brandLight-darker-1; }
			&-2 { color: $color-brandLight-darker-2; }
			&-3 { color: $color-brandLight-darker-3; }
		}
	}
	&-success 		{ color: $color-success-text; }
}

.backgroundColor 	{
	&-brandFirst 	  { background-color: $color-brandFirst; }
	&-brandSecond   { background-color: $color-brandSecond; }
	&-brandDark 		{	background-color: $color-brandDark; }
	&-brandLight 		{ background-color: $color-brandLight; }
	&-white 				{ background-color: #fff; }
	&-success 			{ background-color: $color-success-bg; }
}

.width		{
	&-full  { width: 100% }}

.height 	{
	&-full 	{ height: 100vh; }}

.minHeight {
	&-full 	 { min-height: 100vh; }}

.position 	 {
	&-absolute { position: absolute; }
	&-relative { position: relative; }}

.hidden { opacity: 0 !important; }
.shown { opacity: 1 !important; }
.hide { display: none !important;
	&-mobile { @include breakpoint( 'mobile' ) { display: none !important; } } }
.show { display: block !important; }

.float {
	&-right { float: right; }
	&-left { float: left; }}

.clear {
	&-both { clear: both; }}

.display {
	&-flex { display: flex; }
	&-inlineBlock { display: inline-block; }}

// Flex
.justifyContent {
	&-center 	{ justify-content: center; }
	&-flexStart { justify-content: flex-start; }
	&-flexEnd { justify-content: flex-end; }
	&-spaceBetween { justify-content: space-between;; }}

.alignItems {
	&-center 		{ align-items: center; }
	&-flexStart { align-items: flex-start; }
	&-flexEnd 	{ align-items: flex-end; }}

.flexDirection {
	&-row 		 { flex-direction: row; }
	&-column 	 { flex-direction: column;
		&-mobile { @include breakpoint( 'mobile' ) { flex-direction: column; }}}}

.flipHorizontal { transform: scaleX(-1); }
.flipVertical 	{ transform: scaleY(-1); }

.overflow {
	&-hidden { overflow: hidden; }}

// Lists
.list-unstyled { list-style-type: none; }

// Borders
.border {
	&-all 		{ border-style: solid; border-width: 1px; }
	&-top 		{ border-top-style: solid; border-top-width: 1px; }
	&-right 	{ border-right-style: solid; border-right-width: 1px; }
	&-bottom 	{ border-bottom-style: solid; border-bottom-width: 1px; }
	&-left 		{ border-left-style: solid; border-left-width: 1px; }
	&-none 		{ border-style: none; border-width: 0; }}

// Border colors
.border {
	&--black  	  { border-color: $color-brandGrey-darker-4; }
	&--blue  	  	{ border-color: $color-brandFirst; }
	&--grey  			{ border-color: $color-brandGrey; }
	&--light-grey { border-color: $color-brandGrey-lighter-5; }
	&--near-white { border-color: $color-brandGrey-lighter-6; }
  &--white 			{ border-color: #fff; }}

.border {
	&-3 { border-width: 3px !important; }
}

.tooltip {
	position: absolute;
	top: 80%;
	left: 50%;
	transform: translateX( -50% );
	text-align: center;
	background-color: $color-brandDark;
	color: $color-brandLight;
	border-radius: 2px;
	white-space: nowrap;
	padding: $scale-1-2 $scale;
	font-family: $fontFamily-sans;
	font-weight: bold;
	font-size: 8px;
	text-transform: uppercase;
}

// Message to show when something is not implemented yet
.showNoFunctionMessage {
	&:after {
		content: 'Not functional yet';
		@extend .tooltip;
	}
}

// Animation
.fadeIn 					{ animation: fadeIn 1.2s $animationBezier forwards; }
.fadeOut 					{ animation: fadeOut 1.2s $animationBezier forwards; }
.slideIn 					{ animation: slideIn 1.2s $animationBezier forwards; }
.transition 			{	transition: all 0.6s $animationBezier !important; }
.rotateUpsideDown { transform: rotate( 360deg ) !important; }
